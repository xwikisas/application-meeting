<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="Meeting.Code.Macros" locale="">
  <web>Meeting.Code</web>
  <name>Macros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Meeting.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output=false}}
#macro(addMember $member $memberReference $list)
  ## Mermber references are checked in order to also manage the subwikis members.
  #if ($member != '' &amp;&amp; $xwiki.exists($memberReference) &amp;&amp; !$list.contains($memberReference))
    #set ($discard = $list.add($memberReference))
  #end
#end

#macro(addParticipantsInfo $list $participants)
  #set ($to = '')
  #set ($icsParticipants = '')
  #foreach ($member in $list)
    #set ($email = $xwiki.getUserName($member, '$email', false))
    ## Serialize the member, in order to provide a valid CN value, to avoid breaking the calendar event.
    #set ($name = $xwiki.getUserName($services.model.serialize($member), false))
    #if ("$!email" != '')
      #set ($icsParticipantsString = "ATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;CN=${name};X-NUM-GUESTS=0:mailto:${email}")
      #if ($foreach.index == 0)
        #set ($to = "$email")
        #set ($icsParticipants = "$icsParticipantsString")
      #else
        #set ($to = "$to, $email")
        #set ($icsParticipants = "$icsParticipants, $icsParticipantsString")
      #end
    #end
  #end
  #set ($discard = $participants.put('to', $!{to}))
  #set ($discard = $participants.put('icsParticipants', $!{icsParticipants}))
#end

#macro(getParticipants $meetingDoc $participants)
  #set ($listParticipants = $meetingDoc.getValue('participants').split(','))
  #set ($listGroups = $meetingDoc.getValue('groups').split(','))
  #set ($list = [])
  ## Add members to the recipient list
  #foreach ($member in $listParticipants)
    #set ($memberReference = $services.model.resolveDocument($member))
    #addMember($member $memberReference $list)
  #end
  ## Add the users of the groups to the recipient list
  #foreach ($group in $listGroups)
    #if ($xwiki.exists($group))
      #set ($curentGroupDoc = $xwiki.getDocument($group))
      #foreach ($xGroup in $curentGroupDoc.getObjects('XWiki.XWikiGroups'))
        #set ($member = "$!xGroup.member")
        #set ($memberReference = $services.model.resolveDocument($member, $curentGroupDoc.documentReference))
        #addMember($member $memberReference $list)
      #end
    #end
  #end
  ## Prepare $to and $icsParticipants variables
  #addParticipantsInfo($list $participants)
#end

#macro (getMeetingDates $meetingDoc $dates)
  #set($startDate = $meetingDoc.getValue('startDate'))

  #set($calendar = $datetool.getCalendar())
  #set($discard = $calendar.setTime($startDate))
  #set($discard = $calendar.add(12, $util.parseInt($meetingDoc.getValue('duration'))))
  #set($endDate = $calendar.getTime())

  #set($dateFormat = "yyyyMMdd'T'HHmmss")

  #set($discard = $dates.put('smodDate', $!{datetool.format($dateFormat, $meetingDoc.date)}))
  #set($discard = $dates.put('sstartDate', $!{datetool.format($dateFormat, $startDate)}))
  #set($discard = $dates.put('sendDate', $!{datetool.format($dateFormat, $endDate)}))
#end

#macro (getMeetingInfos $meetingDoc $meeting)
  #set($leader = $meetingDoc.getValue('leader'))
  #set($discard = $meeting.put('place', $meetingDoc.getValue('place')))
  #set($discard = $meeting.put('organizer', $xwiki.getUserName($leader, false)))
  #set($discard = $meeting.put('organizerEmail', $xwiki.getUserName($leader, '$email', false)))
  #set($discard = $meeting.put('description', "$services.localization.render('contrib.meeting.notification.view.event') $!{meetingDoc.getExternalURL()}"))

  #set($dates = {})
  #getMeetingDates($meetingDoc, $dates)
  #set($discard = $meeting.put('dates', $dates))
  #set($participants = {})
  #getParticipants($meetingDoc, $participants)
  #set($discard = $meeting.put('participants', $participants))
#end

#macro (getVCalendarContent $meetingDoc $vCalendar)
  #set($meeting = {})
  #getMeetingInfos($meetingDoc, $meeting)
  #set($timezoneId = $datetool.timeZone.ID)
  #set($vCalendar = "
    BEGIN:VCALENDAR
    METHOD:REQUEST
    PRODID: Meeting
    VERSION:2.0
    BEGIN:VEVENT
    DTSTAMP;TZID=$timezoneId:$!{meeting.dates.smodDate}
    DTSTART;TZID=$timezoneId:$!{meeting.dates.sstartDate}
    DTEND;TZID=$timezoneId:$!{meeting.dates.sendDate}
    SUMMARY:$!{meetingDoc.title}
    UID:$!{meetingDoc.id}
    $!{meeting.participants.icsParticipants}
    ORGANIZER;CN=$!{meeting.organizer}:MAILTO:$!{meeting.organizerEmail}
    LOCATION:$!{meeting.place}
    DESCRIPTION:$!{meeting.description}
    SEQUENCE:0
    PRIORITY:5
    CLASS:PUBLIC
    STATUS:CONFIRMED
    TRANSP:OPAQUE
    BEGIN:VALARM
    ACTION:DISPLAY
    DESCRIPTION:REMINDER
    TRIGGER;RELATED=START:-PT00H15M00S
    END:VALARM
    END:VEVENT
    END:VCALENDAR
  ")
#end
{{/velocity}}</content>
</xwikidoc>
